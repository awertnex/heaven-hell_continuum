**Second release of minecraft.c, this is the windows-support release.**
- - - -

## Download
- all builds can be found below as `.zip` or `.tar.gz` files

## Build from Source
### linux - debian-based:
```bash
git clone --depth=1 --branch v0.1.4-alpha https://github.com/awertnex/minecraft.c.git
cd minecraft.c/
cc build.c -std=c99 -o build # -std=c99 optional, but preferred
./build
```
if build successful, run minecraft.c with `./minecraft_c`\

**additional commands**
- build launcher with `./build launcher` and run with `./launcher`
    - the launcher creates a directory 'minecraft.c/' in your 'HOME' directory
    - all minecraft.c instances will be stored in 'minecraft.c/instances/'
    - the default path to 'minecraft.c/' can be changed from the file 'dir.c' in the function 'init_paths()' before building
- list available tests with `./build list`
    - this command searches the directory 'src/tests/' and loads all `.c` file names into an array to list
- build test [n] with `./build test [n]`
    - this command searches the directory 'src/tests/' and loads all `.c` file names into an array to execute by index [n]
- help `./build --help`


### windows (using mingw/gcc):

**requirements**
- a c compiler, 'cc' or 'gcc' (or MSVC, the c/c++ compiler that comes with visual studio)
    - download `gcc` for windows from [sourceforge/gcc-win64](https://www.sourceforge.net/projects/gcc-win64/)
    - extract it and move the extracted folder somewhere like `C:\` (preferrably) or `C:\Program Files`
    - add the path of the `bin` folder inside to the `path` environment variable

```command
git clone --depth=1 --branch v0.1.4-alpha https://github.com/awertnex/minecraft.c.git
cd minecraft.c
gcc .\build.c -std=c99 -o build.exe
.\build.exe
.\minecraft_c.exe
```
if build successful, run minecraft.c with `minecraft_c.exe`\
cflag `-std=c99` optional, but preferred

**additional commands**
- build launcher with `.\build launcher` and run with `.\launcher.exe`
    - the launcher creates a folder 'minecraft.c' in your 'appdata' folder
    - all minecraft.c instances will be stored in 'minecraft.c\instances'
    - the default path to 'minecraft.c' can be changed from the file 'dir.c' in the function 'init_paths()' before building
- list available tests with `build list`
    - this command searches the folder '.\src\tests' and loads all `.c` file names into an array to list
- build test [n] with `build test [n]`
    - this command searches the folder '.\src\tests' and loads all `.c` file names into an array to execute by index [n]
- help `build --help`

## Notes
- chunk loading is hard-coded and not flexible, you can only build 20 blocks high in chunk 'x: 0, y: 0', and highest parsed block +1 still deletes the top face of the block below if placed
- player target is not a raycaster, it's an xyz position (meaning whichever block is 5 blocks away from your face is the target
- camera modes aren't fully implemented
    - 1, 2 and 3 never change camera distance from player based on blocks behind them
    - panorama anchors and never changes anchor
    - spectator anchors and doesn't move or rotate the camera but moves and rotates the player
- launcher works fine,because there's nothing, just a window (and parses main 'minecraft.c' directory

## Bugs
- gui elements don't follow render scale changes (fullscreen and resize window frame)
- clicking 'Options..' menu shows its buttons and the buttons of the screen before, but only the 'Options..' buttons work
- small enough mouse movements don't register and won't move the player's camera
- collision is funky, player sticks to the ground and can't jump, no matter how far up you are you'll teleport above the block if you stop flying and there's a block under you
- moving the window frame doesn't pause the game and continuously pulls at your mouse
- unfocusing the window and focusing back while the game is unpaused launches camera into a spiral
